//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : CNtlStorageManager.h
//  @ Date : 2009-01-22
//  @ Author : 
//
//

#if !defined(_CNTLSTORAGEMANAGER_H)
#define _CNTLSTORAGEMANAGER_H

#include "NtlStorageGroup.h"
#include <vector>

class CNtlStorageManager
{
public:
	CNtlStorageManager();
	~CNtlStorageManager();

	bool Create();
	void Destroy();

	static CNtlStorageManager* GetInstance()
	{
		static CNtlStorageManager instance;
		return &instance;
	}

	bool Load( eNTL_STORAGE_GROUP_TYPE eType, const char* filename );
	bool Save( eNTL_STORAGE_GROUP_TYPE eType, const char* filename );
	bool Reset( eNTL_STORAGE_GROUP_TYPE eType );
	
	CNtlStorageGroup* GetStorageGroup(eNTL_STORAGE_GROUP_TYPE eType);
	CNtlStorageUnit*  GetStorageUnit(eNTL_STORAGE_TYPE eType);

	int			GetIntData(unsigned int uiKey);
	std::string GetStringData(unsigned int uiKey);
	bool		GetBoolData(unsigned int uiKey);
	float		GetFloatData(unsigned int uiKey);

	bool		SetData(unsigned int uiKey, std::string strData);
	bool		SetData(unsigned int uiKey, int nData );
	bool		SetData(unsigned int uiKey, float fData );
	bool		SetData(unsigned int uiKey, bool bData );
	bool		SetData(unsigned int uiKey, std::wstring wstrData);
	bool		SetData( unsigned int uiKey, const char* acData );
	bool		SetData(unsigned int uiKey, const wchar_t* awcData);

	bool		SetCommonApplyFunc( NtlStorageUnitApplyFunc func );
	bool		ApplyStorageType( eNTL_STORAGE_TYPE eType, unsigned int uiFlags );

protected:

	typedef std::map<eNTL_STORAGE_GROUP_TYPE, CNtlStorageGroup*> GROUPMAP;
	GROUPMAP		m_mapStorageGroup;
};

static CNtlStorageManager* GetNtlStorageManager()
{
	return CNtlStorageManager::GetInstance();
}

#endif  //_CNTLSTORAGEMANAGER_H
